<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这块等于dao接口的实现 namespace必须和接口的类路径一样 -->
<mapper namespace="org.tym.bugpred.mybatis.dao.ICommitDAO">
	<resultMap type="Commit" id="commitResultMap">
		<!-- 属性名和数据库列名映射 -->
        <id property="id" column="id"  />
        <result property="revisionNo" column="revisionNo"  />
        <result property="author" column="author"  />
        <result property="timeStamp" column="timeStamp"  />
        <result property="message" column="message"  />
        <collection property="files" ofType="FileOp" select="selectFileOps" column="id" /> 
        <!-- collection标签中的的column=“id”， 应该指的是将commit库查询结果中的id作为查询参数传递到子查询selectFileOps中-->
       	<!-- 以上是集合嵌套查询，还有一种方式是集合嵌套结果 -->
	</resultMap>
	
	<resultMap type="FileOp" id="fileOpResultMap">
		<!-- 属性名和数据库列名映射 -->
        <id property="id" column="id"  />
        <result property="type" column="opType"  />
        <result property="path" column="filePath"  />
        <result property="commitId" column="commitid"  />
	</resultMap>

	<insert id="insertCommit" parameterType="org.tym.bugpred.mybatis.bean.Commit" useGeneratedKeys="true" keyProperty="id" >
		insert into commit
		(revisionNo,author,timeStamp,message) value
		(
			#{revisionNo,jdbcType=VARCHAR},
			#{author,jdbcType=VARCHAR},
			#{timeStamp,jdbcType=VARCHAR},
			#{message,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 集合嵌套查询 -->
	<select id="selectFileOps" parameterType="String" resultMap="fileOpResultMap" >
		select * from fileop where commitid=#{id}
	</select>
	
	<select id="findCommitByRevisionNo" parameterType="String" resultMap="commitResultMap" >
		select * from commit where revisionNo=#{revisionNo}
	</select>
	
</mapper>